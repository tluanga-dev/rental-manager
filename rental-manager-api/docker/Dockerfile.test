# Enhanced Dockerfile for Transaction Module Testing
ARG PYTHON_VERSION=3.13
FROM python:${PYTHON_VERSION}-slim as base

# Set environment variables for optimal Python behavior
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PYTHONHASHSEED=random \
    PIP_NO_CACHE_DIR=off \
    PIP_DISABLE_PIP_VERSION_CHECK=on \
    PIP_DEFAULT_TIMEOUT=100

# Set working directory
WORKDIR /code

# Install system dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    postgresql-client \
    libpq-dev \
    curl \
    git \
    build-essential \
    make \
    && rm -rf /var/lib/apt/lists/*

# Install UV for fast Python package management
RUN pip install --upgrade pip && \
    pip install uv

# Copy dependency files
COPY pyproject.toml uv.lock* ./

# Install production dependencies using UV
RUN uv sync --frozen

# Install additional test dependencies
RUN uv add --dev \
    pytest==8.4.1 \
    pytest-asyncio==1.1.0 \
    pytest-cov==6.2.1 \
    pytest-xdist==3.7.0 \
    pytest-timeout==2.4.0 \
    pytest-mock==3.16.0 \
    pytest-benchmark==5.2.0 \
    pytest-html==4.2.0 \
    pytest-json-report==2.0.0 \
    faker==37.5.3 \
    factory-boy==3.3.1 \
    httpx==0.28.1 \
    locust==2.35.0 \
    hypothesis==7.2.0 \
    allure-pytest==2.15.0 \
    coverage[toml]==8.2.0 \
    black==25.1.0 \
    ruff==0.12.9 \
    mypy==1.17.1 \
    rich==14.0.0 \
    aiofiles==25.2.0 \
    asyncpg==0.30.0

# Copy application code
COPY app/ /code/app/
COPY alembic/ /code/alembic/
COPY alembic.ini /code/
COPY tests/ /code/tests/
COPY scripts/ /code/scripts/

# Create directories for test results and reports
RUN mkdir -p \
    /code/test_results \
    /code/coverage_reports \
    /code/performance_reports \
    /code/load_test_results \
    /code/htmlcov \
    /code/logs \
    /code/.pytest_cache

# Set Python path
ENV PYTHONPATH=/code

# Create a non-root user for security
RUN useradd -m -u 1000 testuser && \
    chown -R testuser:testuser /code

# Switch to non-root user
USER testuser

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Default command for running comprehensive tests
CMD ["sh", "-c", "pytest tests/ -v --tb=short --color=yes --cov=app --cov-report=html --cov-report=term"]