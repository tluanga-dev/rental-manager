"""Add categories table with hierarchical support

Revision ID: 080519bf1831
Revises: b44b541c0e58
Create Date: 2025-08-21 02:19:18.513477

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '080519bf1831'
down_revision: Union[str, None] = 'b44b541c0e58'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('name', sa.String(length=100), nullable=False, comment='Category name'),
    sa.Column('category_code', sa.String(length=15), nullable=False, comment='Unique category code (max 15 chars)'),
    sa.Column('parent_category_id', sa.UUID(), nullable=True, comment='Parent category ID'),
    sa.Column('category_path', sa.String(length=500), nullable=False, comment='Full category path'),
    sa.Column('category_level', sa.Integer(), nullable=False, comment='Hierarchy level'),
    sa.Column('display_order', sa.Integer(), nullable=False, comment='Display order within parent'),
    sa.Column('is_leaf', sa.Boolean(), nullable=False, comment='True if category has no children'),
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False, comment='UUID primary key generated by PostgreSQL'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_by', sa.String(length=255), nullable=True),
    sa.Column('updated_by', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_by', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['parent_category_id'], ['categories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_category_active_leaf', 'categories', ['is_active', 'is_leaf'], unique=False)
    op.create_index('idx_category_display_order', 'categories', ['display_order'], unique=False)
    op.create_index('idx_category_level', 'categories', ['category_level'], unique=False)
    op.create_index('idx_category_parent', 'categories', ['parent_category_id'], unique=False)
    op.create_index('idx_category_parent_order', 'categories', ['parent_category_id', 'display_order'], unique=False)
    op.create_index('idx_category_path', 'categories', ['category_path'], unique=False)
    op.create_index(op.f('ix_categories_category_code'), 'categories', ['category_code'], unique=True)
    op.create_index(op.f('ix_categories_category_path'), 'categories', ['category_path'], unique=False)
    op.create_index(op.f('ix_categories_is_active'), 'categories', ['is_active'], unique=False)
    op.create_index('uk_category_name_parent', 'categories', ['name', 'parent_category_id'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('uk_category_name_parent', table_name='categories')
    op.drop_index(op.f('ix_categories_is_active'), table_name='categories')
    op.drop_index(op.f('ix_categories_category_path'), table_name='categories')
    op.drop_index(op.f('ix_categories_category_code'), table_name='categories')
    op.drop_index('idx_category_path', table_name='categories')
    op.drop_index('idx_category_parent_order', table_name='categories')
    op.drop_index('idx_category_parent', table_name='categories')
    op.drop_index('idx_category_level', table_name='categories')
    op.drop_index('idx_category_display_order', table_name='categories')
    op.drop_index('idx_category_active_leaf', table_name='categories')
    op.drop_table('categories')
    # ### end Alembic commands ###