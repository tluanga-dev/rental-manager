"""Create customer and user tables

Revision ID: 95173b7f1235
Revises: d5074ffc649a
Create Date: 2025-08-20 15:43:42.531490

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '95173b7f1235'
down_revision: Union[str, None] = 'd5074ffc649a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Create customers table with String columns and check constraints
    op.create_table('customers',
    sa.Column('customer_code', sa.String(length=50), nullable=False),
    sa.Column('customer_type', sa.String(length=20), nullable=False),
    sa.Column('business_name', sa.String(length=200), nullable=True),
    sa.Column('first_name', sa.String(length=100), nullable=False),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=False),
    sa.Column('mobile', sa.String(length=20), nullable=True),
    sa.Column('address_line1', sa.String(length=200), nullable=False),
    sa.Column('address_line2', sa.String(length=200), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=False),
    sa.Column('state', sa.String(length=100), nullable=False),
    sa.Column('postal_code', sa.String(length=20), nullable=False),
    sa.Column('country', sa.String(length=100), nullable=False),
    sa.Column('tax_number', sa.String(length=50), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('customer_tier', sa.String(length=20), nullable=False),
    sa.Column('credit_limit', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('credit_rating', sa.String(length=20), nullable=False),
    sa.Column('payment_terms', sa.String(length=50), nullable=True),
    sa.Column('blacklist_status', sa.String(length=20), nullable=False),
    sa.Column('blacklist_reason', sa.Text(), nullable=True),
    sa.Column('blacklist_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('total_rentals', sa.Numeric(precision=10, scale=0), nullable=False),
    sa.Column('total_spent', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('lifetime_value', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('last_rental_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_transaction_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False, comment='UUID primary key generated by PostgreSQL'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_by', sa.String(length=255), nullable=True),
    sa.Column('updated_by', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_by', sa.String(length=255), nullable=True),
    sa.CheckConstraint("customer_type IN ('INDIVIDUAL', 'BUSINESS')", name='check_customer_type'),
    sa.CheckConstraint("status IN ('ACTIVE', 'INACTIVE', 'SUSPENDED', 'PENDING')", name='check_customer_status'),
    sa.CheckConstraint("customer_tier IN ('BRONZE', 'SILVER', 'GOLD', 'PLATINUM')", name='check_customer_tier'),
    sa.CheckConstraint("credit_rating IN ('EXCELLENT', 'GOOD', 'FAIR', 'POOR', 'NO_RATING')", name='check_credit_rating'),
    sa.CheckConstraint("blacklist_status IN ('CLEAR', 'WARNING', 'BLACKLISTED')", name='check_blacklist_status'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_customer_blacklist', 'customers', ['blacklist_status'], unique=False)
    op.create_index('idx_customer_code', 'customers', ['customer_code'], unique=False)
    op.create_index('idx_customer_email', 'customers', ['email'], unique=False)
    op.create_index('idx_customer_location', 'customers', ['city', 'state', 'country'], unique=False)
    op.create_index('idx_customer_tier', 'customers', ['customer_tier'], unique=False)
    op.create_index('idx_customer_type_status', 'customers', ['customer_type', 'status'], unique=False)
    op.create_index(op.f('ix_customers_customer_code'), 'customers', ['customer_code'], unique=True)
    op.create_index(op.f('ix_customers_email'), 'customers', ['email'], unique=True)
    op.create_index(op.f('ix_customers_is_active'), 'customers', ['is_active'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_customers_is_active'), table_name='customers')
    op.drop_index(op.f('ix_customers_email'), table_name='customers')
    op.drop_index(op.f('ix_customers_customer_code'), table_name='customers')
    op.drop_index('idx_customer_type_status', table_name='customers')
    op.drop_index('idx_customer_tier', table_name='customers')
    op.drop_index('idx_customer_location', table_name='customers')
    op.drop_index('idx_customer_email', table_name='customers')
    op.drop_index('idx_customer_code', table_name='customers')
    op.drop_index('idx_customer_blacklist', table_name='customers')
    op.drop_table('customers')
    # ### end Alembic commands ###