# Development Dockerfile for Next.js Frontend
# Optimized for hot reload and Docker development

FROM node:20-alpine

# Install system dependencies for better compatibility
RUN apk add --no-cache \
    libc6-compat \
    git \
    curl \
    bash

# Set working directory
WORKDIR /app

# Copy package files first for better layer caching
COPY package*.json ./

# Install all dependencies (including dev dependencies)
RUN --mount=type=cache,target=/root/.npm \
    npm ci --silent

# Copy application files (will be overridden by volume mount in development)
COPY . .

# Create necessary directories
RUN mkdir -p .next logs temp

# Set development environment variables
ENV NODE_ENV=development
ENV NEXT_TELEMETRY_DISABLED=1

# Enable hot reload polling for Docker environments
ENV WATCHPACK_POLLING=true
ENV CHOKIDAR_USEPOLLING=true
ENV CHOKIDAR_INTERVAL=300

# Optimize for development performance
ENV FORCE_COLOR=1
ENV CI=0

# Create non-root user for security
RUN addgroup --system --gid 1001 nodejs && \
    adduser --system --uid 1001 nextjs --ingroup nodejs

# Change ownership of app directory
RUN chown -R nextjs:nodejs /app
USER nextjs

# Expose port for Next.js dev server
EXPOSE 3000

# Health check for development
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:3000 || exit 1

# Start development server with enhanced options
CMD ["npm", "run", "dev", "--", "--hostname", "0.0.0.0", "--port", "3000"]